{
  "hash": "72c0a19ec6c15d9fad39e468f9cc1030",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Global Fluxnet Figures\"\nauthors:\n    - name: Eric R. Scott\n      orcid: 0000-0002-7430-7879\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    code-fold: true\n    number-sections: true\nexecute:\n  freeze: auto\n  echo: true\n  warning: false\n  message: true\n---\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tsibble)\nlibrary(purrr)\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(patchwork)\nlibrary(sf)\nlibrary(colorspace)\nlibrary(rnaturalearth)\nsource(\"R/fcn_utility_FLUXNET.R\")\nset.seed(123)\n```\n:::\n\n\n## Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- load_fluxnet_metadata()\namf_files <-\n  discover_AMF_files(data_dir = here::here(\"data/FLUXNET/AMF\")) %>%\n  filter(dataset == \"FULLSET\")\n## • AUX / AUXMETEO → 12 sites, 130 site-years across 12 files\n## • AUX / AUXNEE → 12 sites, 130 site-years across 12 files\n## • DD / ERA5 → 12 sites, 517 site-years across 12 files\n## • DD / FULLSET → 299 sites, 2177 site-years across 301 files\n## • HH / ERA5 → 12 sites, 517 site-years across 12 files\n## • HH / FULLSET → 282 sites, 2011 site-years across 284 files\n## • MM / ERA5 → 12 sites, 517 site-years across 12 files\n## • MM / FULLSET → 299 sites, 2177 site-years across 301 files\n## • WW / ERA5 → 12 sites, 517 site-years across 12 files\n## • WW / FULLSET → 12 sites, 130 site-years across 12 files\n## • YY / ERA5 → 12 sites, 517 site-years across 12 files\n## • YY / FULLSET → 299 sites, 2177 site-years across 301 files\nicos_files <-\n  discover_ICOS_files(data_dir = here::here(\"data/FLUXNET/ICOS\")) %>%\n  filter(dataset == \"L2\") # I don't have any \"fullset\" for ICOS\n## • DD / L2 → 70 sites, 0 total site-years across 70 files\n## • HH / L2 → 1 sites, 0 total site-years across 1 files\n## • MM / L2 → 70 sites, 0 total site-years across 70 files\n## • WW / L2 → 1 sites, 0 total site-years across 1 files\n## • YY / L2 → 70 sites, 0 total site-years across 70 files\nmanifest <- bind_rows(amf_files, icos_files)\n\n# deduplicate manifest (just in case)\nmanifest <- manifest %>%\n  distinct(\n    site,\n    data_product,\n    dataset,\n    time_integral,\n    start_year,\n    end_year,\n    .keep_all = TRUE\n  )\n\nannual <- manifest %>%\n  filter(time_integral == \"YY\") %>%\n  load_fluxnet_data() %>%\n  mutate(across(where(is.numeric), \\(x) na_if(x, -9999))) %>%\n  mutate(year = as.integer(TIMESTAMP), .before = TIMESTAMP) %>%\n  left_join(metadata %>% select(-SITEID, -SITE_ID), by = join_by(site))\n\nmonthly <- manifest %>%\n  filter(time_integral == \"MM\") %>%\n  load_fluxnet_data() %>%\n  mutate(across(where(is.numeric), \\(x) na_if(x, -9999))) %>%\n  mutate(\n    yearmonth = tsibble::yearmonth(as.character(TIMESTAMP), format = \"%Y%m\"),\n    .before = TIMESTAMP\n  ) %>%\n  left_join(metadata %>% select(-SITEID, -SITE_ID), by = join_by(site))\n```\n:::\n\n\n::: {.callout-note}\n\nThese are the specific Fluxnet [variables](https://fluxnet.org/data/fluxnet2015-dataset/fullset-data-product/) being used:\n\n- GPP: `GPP_NT_VUT_MEAN` ± `GPP_NT_VUT_SE` \n- NEE: `NEE_VUT_MEAN` ± `NEE_VUT_SE` \n- RECO: `RECO_NT_VUT_MEAN` ± `RECO_NT_VUT_SE` \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nvars_of_interest <- c(\n  \"GPP_NT_VUT_MEAN\",\n  \"NEE_VUT_MEAN\",\n  \"RECO_NT_VUT_MEAN\"\n)\n```\n:::\n\n\n:::\n\n## Figures\n\nThese are the figures outlined [here](https://docs.google.com/document/d/1pboBG_xrkZ-VXZo7OWbEBurycVfVDwIZ3NsmSD-ScXE/edit?tab=t.0)\n\n1. FLUXNET site map by biome or record length (@fig-site-map).\n2. Network-mean annual fluxes (NEE, GPP, RECO, ET) with trends (@fig-annual-anomalies). \n3. Composite anomalies during extreme events (e.g., ENSO, drought). \n4. Global flux maps (baseline and anomaly layers) (@fig-flux-map).\n5. Regional highlight panels / bar charts by continent. \n6. Timeseries and normalized trends \n7. Phenology trends for major biomes (onset/peak/offset). \n8. “Year in Flux” thematic figure (rotating). \n\n### Site map by record length\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld <- ne_countries() %>%\n  st_set_crs(4326) %>%\n  filter(continent != \"Antarctica\")\n\nsite_yrs <- annual %>%\n  group_by(site) %>%\n  summarize(n_yrs = length(unique(year))) %>%\n  left_join(metadata, by = join_by(site)) %>%\n  st_as_sf(coords = c(\"LOCATION_LONG\", \"LOCATION_LAT\")) %>%\n  st_set_crs(4326)\n\n# set up bboxes for N. America and Europe\n# These could be defined manually by lat + lon, by countries, or by sites.  This version defines it by sites\nbbox_na <-\n  site_yrs %>%\n  filter(COUNTRY %in% c(\"USA\", \"Canada\", \"Mexico\", \"Panama\", \"Costa Rica\")) %>%\n  st_bbox()\n\nbbox_eu <-\n  site_yrs %>%\n  filter(\n    COUNTRY %in%\n      c(\n        \"Belgium\",\n        \"Switzerland\",\n        \"Czechia\",\n        \"Germany\",\n        \"Denmark\",\n        \"Spain\",\n        \"Finland\",\n        \"France\",\n        \"Italy\",\n        \"Netherlands\",\n        \"Norway\",\n        \"Portugul\",\n        \"Sweden\",\n        \"UK\"\n      )\n  ) %>%\n  st_bbox()\n\np <- ggplot() +\n  geom_sf(data = world, fill = \"white\") +\n  geom_sf(data = site_yrs, aes(color = n_yrs), size = 0.5) +\n  scale_color_continuous_sequential(\n    palette = \"Viridis\",\n    rev = FALSE,\n    end = 0.9\n  ) +\n  theme_void() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", color = \"black\")\n  )\n\np1 <- p + coord_sf(default_crs = 4326, lims_method = \"geometry_bbox\")\n# p1\np2 <- p +\n  coord_sf(\n    xlim = c(bbox_na[\"xmin\"], bbox_na[\"xmax\"]),\n    ylim = c(bbox_na[\"ymin\"], bbox_na[\"ymax\"])\n  )\n# p2\np3 <- p +\n  coord_sf(\n    xlim = c(bbox_eu[\"xmin\"], bbox_eu[\"xmax\"]),\n    ylim = c(bbox_eu[\"ymin\"], bbox_eu[\"ymax\"])\n  )\n# p3\n\np_composite <- p1 /\n  (p3 | p2) +\n  plot_layout(\n    widths = c(1, 0.4, 0.6),\n    heights = c(0.387, 0.5, 0.5),\n    guides = \"collect\"\n  ) &\n  labs(color = \"# yrs\")\n\nn_yrs_file <- ggsave(\n  here::here(\"saved_plots/n_yrs_site_map.png\"),\n  plot = p_composite,\n  height = 2000,\n  width = 2000,\n  units = \"px\"\n)\nknitr::plot_crop(n_yrs_file)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(n_yrs_file)\n```\n\n::: {.cell-output-display}\n![Map of sites by number of years of data](saved_plots/n_yrs_site_map.png){#fig-site-map width=876}\n:::\n:::\n\n\n### Site map by IGBP\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata_sf <- metadata %>%\n  st_as_sf(coords = c(\"LOCATION_LONG\", \"LOCATION_LAT\")) %>%\n  st_set_crs(st_crs(4326)) #arbitrary lat/lon CRS\n\np <- ggplot() +\n  geom_sf(data = world, fill = \"white\") +\n  geom_sf(\n    data = metadata_sf,\n    aes(color = IGBP),\n    size = 0.5,\n    key_glyph = \"rect\"\n  ) +\n  scale_color_discrete_qualitative() +\n  theme_void() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", color = \"black\")\n  )\n\np1 <- p + coord_sf(default_crs = 4326, lims_method = \"geometry_bbox\")\n# p1\np2 <- p +\n  coord_sf(\n    xlim = c(bbox_na[\"xmin\"], bbox_na[\"xmax\"]),\n    ylim = c(bbox_na[\"ymin\"], bbox_na[\"ymax\"])\n  )\n# p2\np3 <- p +\n  coord_sf(\n    xlim = c(bbox_eu[\"xmin\"], bbox_eu[\"xmax\"]),\n    ylim = c(bbox_eu[\"ymin\"], bbox_eu[\"ymax\"])\n  )\n# p3\n\np_composite <- p1 /\n  (p3 | p2) +\n  plot_layout(\n    widths = c(1, 0.4, 0.6),\n    heights = c(0.387, 0.5, 0.5),\n    guides = \"collect\"\n  ) &\n  labs(color = \"IGBP\")\n\nIGBP_site_file <- ggsave(\n  here::here(\"saved_plots/IGBP_site_map.png\"),\n  plot = p_composite,\n  width = 2000,\n  height = 2000,\n  units = \"px\"\n)\nknitr::plot_crop(IGBP_site_file)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(IGBP_site_file)\n```\n\n::: {.cell-output-display}\n![Map of sites by IGBP](saved_plots/IGBP_site_map.png){#fig-site-map-igbp width=886}\n:::\n:::\n\n\n### Annual timeseries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nannual_anomalies <- annual %>%\n  mutate(\n    .by = c(site),\n    across(all_of(vars_of_interest), \\(x) x - mean(x, na.rm = TRUE))\n  ) %>%\n  summarize(\n    .by = c(year),\n    across(\n      all_of(vars_of_interest),\n      .fns = list(mean = \\(x) mean(x, na.rm = TRUE), sd = \\(x) {\n        sd(x, na.rm = TRUE)\n      })\n    )\n  ) %>%\n  # keep only rows where at least one of the means is not NA or Inf\n  filter(if_any(all_of(paste0(vars_of_interest, \"_mean\")), is.finite))\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnee <- ggplot(annual_anomalies, aes(x = year)) +\n  geom_ribbon(\n    aes(\n      ymin = NEE_VUT_MEAN_mean - NEE_VUT_MEAN_sd,\n      ymax = NEE_VUT_MEAN_mean + NEE_VUT_MEAN_sd\n    ),\n    alpha = 0.4\n  ) +\n  geom_line(aes(y = NEE_VUT_MEAN_mean)) +\n  labs(y = \"NEE (gC m<sup>-2</sup> y<sup>-1</sup>)\") +\n  theme(axis.title.y = element_markdown(), axis.title.x = element_blank())\n\ngpp <- ggplot(annual_anomalies, aes(x = year)) +\n  geom_ribbon(\n    aes(\n      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,\n      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd\n    ),\n    alpha = 0.4\n  ) +\n  geom_line(aes(y = GPP_NT_VUT_MEAN_mean)) +\n  labs(y = \"GPP (gC m<sup>-2</sup> y<sup>-1</sup>)\") +\n  theme(axis.title.y = element_markdown(), axis.title.x = element_blank())\n\nreco <- ggplot(annual_anomalies, aes(x = year)) +\n  geom_ribbon(\n    aes(\n      ymin = RECO_NT_VUT_MEAN_mean - RECO_NT_VUT_MEAN_sd,\n      ymax = RECO_NT_VUT_MEAN_mean + RECO_NT_VUT_MEAN_sd\n    ),\n    alpha = 0.4\n  ) +\n  geom_line(aes(y = RECO_NT_VUT_MEAN_mean)) +\n  labs(y = \"RECO (gC m<sup>-2</sup> y<sup>-1</sup>)\") +\n  theme(axis.title.y = element_markdown(), axis.title.x = element_blank())\n\nnee +\n  gpp +\n  reco +\n  plot_layout(ncol = 2, axes = \"collect\") +\n  plot_annotation(tag_levels = \"a\")\n```\n\n::: {.cell-output-display}\n![Mean ± SD of normalized (i.e. centered by subtracting the mean from the annual mean at each site) global fluxes; NEE (a), GPP (b), and RECO (c)](global_figures_files/figure-html/fig-annual-anomalies-1.png){#fig-annual-anomalies width=672}\n:::\n:::\n\n\n### Current--historical comparisons\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# all years prior to current year\n\nannual_hist <-\n  annual %>%\n  select(site, year, all_of(vars_of_interest)) %>%\n  # filter(site == \"CA-DSM\") %>%\n  filter(year < max(year)) %>%\n  summarize(\n    .by = site,\n    across(\n      all_of(vars_of_interest),\n      \\(x) mean(x, na.rm = TRUE)\n    )\n  )\n# current year - mean of all prior years\n\nannual_current <-\n  annual %>%\n  select(site, year, all_of(vars_of_interest)) %>%\n  # filter(site == \"CA-DSM\") %>%\n  filter(year == max(year)) %>%\n  summarize(\n    .by = site,\n    across(\n      all_of(vars_of_interest),\n      \\(x) mean(x, na.rm = TRUE)\n    )\n  )\n\nplot_df <- bind_rows(\n  annual_hist %>% mutate(period = \"hist\"),\n  annual_current %>% mutate(period = \"curr\"),\n) %>%\n  pivot_longer(c(-site, -period)) %>%\n  pivot_wider(names_from = \"period\", values_from = \"value\") %>%\n  mutate(diff = curr - hist) %>%\n  pivot_wider(names_from = name, values_from = c(hist, curr, diff)) %>%\n  #join in lat lon\n  left_join(metadata %>% select(site, LOCATION_LAT, LOCATION_LONG)) %>%\n  st_as_sf(coords = c(\"LOCATION_LONG\", \"LOCATION_LAT\")) %>%\n  st_set_crs(4326)\n\n# make plots\np_list <- map(vars_of_interest, \\(var) {\n  lab <- str_extract(var, \"GPP|NEE|RECO\")\n  var_hist <- paste0(\"hist_\", var)\n  var_diff <- paste0(\"diff_\", var)\n  #left panel: historic\n  p1 <- plot_df %>%\n    filter(if_all(all_of(var_hist), is.finite)) %>%\n    ggplot() +\n    geom_sf(data = world, fill = \"white\") +\n    geom_sf(aes(color = .data[[var_hist]]), size = 0.4, na.rm = TRUE) +\n    scale_color_continuous_sequential(palette = \"Viridis\") +\n    # scale_color_continuous_diverging() +\n    # scale_color_binned_diverging() +\n    labs(\n      color = glue::glue(\"{lab} gC m<sup>-2</sup> y<sup>-1</sup>\")\n    ) +\n    coord_sf(expand = FALSE) +\n    theme_void() +\n    theme(\n      legend.title = element_markdown(),\n      legend.position = \"bottom\",\n      legend.key.width = unit(1, \"null\"), #stretch to fill width of plot\n      plot.margin = unit(\n        c(4, 4, 4, 4),\n        c(\"points\", \"points\", \"points\", \"points\")\n      ),\n      panel.background = element_rect(fill = \"lightblue\", color = \"black\")\n    )\n  #right panel: this year - historic\n  p2 <- plot_df %>%\n    filter(if_all(all_of(var_diff), is.finite)) %>%\n    ggplot() +\n    geom_sf(data = world, fill = \"white\") +\n    geom_sf(aes(color = .data[[var_diff]]), size = 0.4, na.rm = TRUE) +\n    scale_color_continuous_diverging() +\n    # scale_color_binned_diverging() +\n    labs(\n      color = glue::glue(\"{lab} gC m<sup>-2</sup> y<sup>-1</sup>\")\n    ) +\n    coord_sf(expand = FALSE) +\n    theme_void() +\n    theme(\n      legend.title = element_markdown(),\n      legend.position = \"bottom\",\n      legend.key.width = unit(1, \"null\"), #stretch to fill width of plot\n      plot.margin = unit(\n        c(4, 4, 4, 4),\n        c(\"points\", \"points\", \"points\", \"points\")\n      ),\n      panel.background = element_rect(fill = \"lightblue\", color = \"black\")\n    )\n  p1 | p2\n})\n```\n:::\n\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code}\nwrap_plots(p_list, ncol = 1) + plot_annotation(tag_levels = \"a\")\n```\n\n::: {.cell-output-display}\n![Map of fluxes averaged over all years prior to 2024 (a, c, e) and the difference between the current year (2024) and those prior years (b, d, f)](global_figures_files/figure-html/fig-flux-map-1.png){#fig-flux-map width=960}\n:::\n:::\n\n\n<!--\n\n## Timeseries of monthly anomalies\n\n\nCalculate anomalies as the difference at each yearmonth from the average for that month (at each site).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanomalies <-\n  monthly %>%\n  select(yearmonth, site, all_of(vars_of_interest), IGBP) %>%\n  mutate(month = month(yearmonth), .before = yearmonth) %>%\n  mutate(\n    across(all_of(vars_of_interest), \\(x) x - mean(x, na.rm = TRUE)),\n    .by = c(site, month)\n  )\n```\n:::\n\n\n\n\nBy IGBP averaged across sites\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanomalies %>%\n  group_by(yearmonth, IGBP) %>%\n  summarize(across(\n    all_of(vars_of_interest),\n    .fns = list(mean = \\(x) mean(x, na.rm = TRUE), sd = \\(x) {\n      sd(x, na.rm = TRUE)\n    })\n  )) %>%\n  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN_mean)) +\n  facet_wrap(vars(IGBP), scales = \"free\") +\n  geom_line() +\n  geom_ribbon(\n    aes(\n      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,\n      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd\n    ),\n    color = NA,\n    alpha = 0.4\n  )\n```\n\n::: {.cell-output-display}\n![](global_figures_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Zonal timeseries\n\nWith an arbitrary polygon (e.g. a country, a biome, etc.), extract and average timeseries of all sites in the polygon\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pick a polygon\nusa <- ne_countries(country = \"United States of America\") %>% st_set_crs(4326)\n\n# figure out which sites are in the polygon\nmetadata_sf <- metadata %>%\n  st_as_sf(coords = c(\"LOCATION_LONG\", \"LOCATION_LAT\")) %>%\n  st_set_crs(st_crs(usa)) #arbitrary lat/lon CRS\n\n# subset of sites that are in the polygon\nmetadata_sf_sub <- metadata_sf[st_intersects(usa, metadata_sf)[[1]], ]\nsites_sub <- metadata_sf_sub$site\n\nggplot() +\n  geom_sf(data = world, fill = \"white\") +\n  # geom_sf(data = plot_df_sf) +\n  geom_sf(data = usa, fill = \"green\", alpha = 0.5) +\n  # geom_sf(data = metadata_sf_sub, color = \"darkgreen\") + # these sites don't all necessarily have data\n  # coord_sf(xlim = c(sites_bbox[\"xmin\"], sites_bbox[\"xmax\"])) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](global_figures_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_sub <- monthly %>%\n  filter(site %in% sites_sub)\n\n# get monthly means I guess?\nmean_monthly_sub <- monthly_sub %>%\n  group_by(yearmonth) %>%\n  summarize(across(\n    all_of(vars_of_interest),\n    .fns = list(\n      mean = \\(x) mean(x, na.rm = TRUE),\n      sd = \\(x) sd(x, na.rm = TRUE)\n    )\n  )) %>%\n  filter(if_all(starts_with(vars_of_interest), is.finite))\n\nggplot(mean_monthly_sub, aes(x = yearmonth, y = GPP_NT_VUT_MEAN_mean)) +\n  geom_line() +\n  geom_ribbon(\n    aes(\n      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,\n      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd\n    ),\n    alpha = 0.3\n  ) +\n  labs(title = \"Mean (±SD) in subset\")\n```\n\n::: {.cell-output-display}\n![](global_figures_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Or maybe we just want all the sites plotted as anomalies\nmonthly_sub %>%\n  select(yearmonth, site, all_of(vars_of_interest)) %>%\n  mutate(month = month(yearmonth), .before = yearmonth) %>%\n  mutate(\n    across(all_of(vars_of_interest), \\(x) x - mean(x, na.rm = TRUE)),\n    .by = c(site, month)\n  ) %>%\n  # filter(if_all(starts_with(vars_of_interest), is.finite)) %>%\n  filter(is.finite(GPP_NT_VUT_MEAN)) %>%\n  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN, color = site)) +\n  geom_line(alpha = 0.3) +\n  theme(legend.position = \"none\") +\n  labs(title = \"Anomalies in subset\")\n```\n\n::: {.cell-output-display}\n![](global_figures_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\nThat is not very nice looking.\n\nTo plot anomalies for a geographical subset, would you first normalize then take the average or average and then normalize?  Probably the former?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_sub %>%\n  select(yearmonth, site, all_of(vars_of_interest)) %>%\n  mutate(month = month(yearmonth), .before = yearmonth) %>%\n  mutate(\n    across(all_of(vars_of_interest), \\(x) x - mean(x, na.rm = TRUE)),\n    .by = c(site, month)\n  ) %>%\n  group_by(yearmonth) %>%\n  summarize(\n    across(\n      all_of(vars_of_interest),\n      .fns = list(mean = \\(x) mean(x, na.rm = TRUE), sd = \\(x) {\n        sd(x, na.rm = TRUE)\n      })\n    )\n  ) %>%\n  filter(if_all(starts_with(vars_of_interest), is.finite)) %>%\n  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN_mean)) +\n  geom_line() +\n  geom_ribbon(\n    aes(\n      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,\n      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd\n    ),\n    alpha = 0.3\n  ) +\n  labs(title = \"Mean (±SD) anomaly in subset\")\n```\n\n::: {.cell-output-display}\n![](global_figures_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}