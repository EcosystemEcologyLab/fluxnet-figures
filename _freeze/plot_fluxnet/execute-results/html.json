{
  "hash": "ce7bc1c4994b538c41a4430abfc82514",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Potential Figures for North American Ecosystem Ecology Paper\"\nauthor: \n  - Kristina Riemer\n  - Dave Moore\n  - name: Eric R. Scott\n    orcid: 0000-0002-7430-7879\ndate: today\nformat:\n  html:\n    toc: true\n    toc-expand: 2\n    toc-location: left\n    css: styles.css\n    code-fold: true\nexecute: \n  warning: false\n---\n\n\n\n## TODO list\n\n- Data\n  - Automated checking of data ranges? \n- Plots\n  - Scale by number of years for each date\n  - Do all initial plots\n  - Change IGBP codes to definitions\n  - Add overall trend line to interannual met variability plots\n  - Facet all figures for interannual met variability\n  - Simplify seasonal plot code with `tsibble::yearmonth` and `tsibble::scale_x_yearmonth`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Need dev version of `amerifluxr` package to get `amf_download_fluxnet` function.\npak::pak(\"chuhousen/amerifluxr\")\npak::pak(\"valentinitnelav/plotbiomes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(amerifluxr)\nlibrary(stringr)\nlibrary(readr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(plotbiomes)\nlibrary(measurements)\nlibrary(ggnewscale)\nlibrary(fs)\nlibrary(geomtextpath)\nlibrary(ggtext) #for subscripts in axis labels\nlibrary(ggforce) #for convex hulls in bowen ratios plot\n\n#source data loading functions\nsource(\"R/fcn_utility_FLUXNET.R\")\n\n#set default ggplot2 theme\ntheme_set(theme_classic() + theme(axis.title = element_markdown()))\n```\n:::\n\n\n\n## Download data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\namf_sites <- amerifluxr::amf_sites()\namf_sites$COUNTRY |> unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Argentina\"   \"Brazil\"      \"Canada\"      \"Chile\"       \"Colombia\"   \n [6] \"Costa Rica\"  \"Mexico\"      \"Panama\"      \"Peru\"        \"Puerto Rico\"\n[11] \"USA\"        \n```\n\n\n:::\n\n```{.r .cell-code}\namf_sites_nam <- amf_sites |>\n  filter(COUNTRY %in% c(\"Mexico\", \"Canada\", \"USA\")) |>\n  pull(SITE_ID)\n```\n:::\n\n\n\nCode for downloading Ameriflux data (all sites in North America)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#check what sites you already have\nfluxnet_files <- tibble(\n  path = dir_ls(\n    \"data/\",\n    regexp = \"AMF_[^_]+_FLUXNET_FULLSET_(?:YY|DD|HH|WW)_[0-9]{4}-[0-9]{4}_.*\\\\.csv$\",\n    recurse = TRUE\n  )\n) |>\n  mutate(\n    filename = path_file(path),\n    to_split = path_ext_remove(filename)\n  ) |>\n  separate_wider_delim(\n    to_split,\n    names = c(\n      \"source\",\n      \"SITE_ID\",\n      \"fluxnet\",\n      \"set\",\n      \"period\",\n      \"yr_range\",\n      \"junk\"\n    ),\n    delim = \"_\"\n  ) |>\n  select(-fluxnet, -junk) |>\n  separate_wider_delim(\n    SITE_ID,\n    names = c(\"country_code\", \"site\"),\n    delim = \"-\",\n    cols_remove = FALSE\n  )\n\nsites_to_dl <- setdiff(amf_sites_nam, unique(fluxnet_files$SITE_ID))\n\n\nzip_paths <- amf_download_fluxnet(\n  user_id = \"Aariq\",\n  user_email = \"scottericr@gmail.com\",\n  site_id = sites_to_dl,\n  data_product = \"FLUXNET\",\n  data_variant = \"FULLSET\",\n  data_policy = \"CCBY4.0\",\n  agree_policy = TRUE,\n  intended_use = \"synthesis\",\n  intended_use_text = \"creating pipeline for standardized figures\",\n  out_dir = \"data/AMF\"\n)\n\n# Only unzip files needed\nwalk(\n  zip_paths,\n  \\(zip_path) {\n    t <- c(\"DD\", \"YY\", \"HH\") #which FULLSET CSVs to extract\n    exdir <- fs::path_ext_remove(zip_path)\n    #split apart the file name and insert `t` in the right place\n    file_vect <- zip_path |>\n      path_file() |>\n      stringr::str_split(\"_\") |>\n      pluck(1)\n    files <- paste(\n      paste(file_vect[1:4], collapse = \"_\"),\n      t,\n      paste(file_vect[5:6], collapse = \"_\"),\n      sep = \"_\"\n    ) |>\n      fs::path_ext_set(\"csv\")\n\n    unzip(zip_path, files = files, exdir = exdir)\n  },\n  .progress = TRUE\n)\n```\n:::\n\n\n\n## Read in data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# site_metadata <- load_fluxnet_metadata() |>\n#   filter(SITE_ID %in% amf_sites_nam)\n# fluxnet_annual <- load_and_clean_annual_data(site_metadata)\n# fluxnet_daily <- load_and_clean_daily_data(site_metadata)\n\nfluxnet_files <- tibble(\n  path = dir_ls(\n    \"data/\",\n    regexp = \"AMF_[^_]+_FLUXNET_FULLSET_(?:YY|DD|HH|WW)_[0-9]{4}-[0-9]{4}_.*\\\\.csv$\",\n    recurse = TRUE\n  )\n) |>\n  mutate(\n    filename = path_file(path),\n    to_split = path_ext_remove(filename)\n  ) |>\n  separate_wider_delim(\n    to_split,\n    names = c(\n      \"source\",\n      \"SITE_ID\",\n      \"fluxnet\",\n      \"set\",\n      \"period\",\n      \"yr_range\",\n      \"junk\"\n    ),\n    delim = \"_\"\n  ) |>\n  select(-fluxnet, -junk) |>\n  separate_wider_delim(\n    SITE_ID,\n    names = c(\"country_code\", \"site\"),\n    delim = \"-\",\n    cols_remove = FALSE\n  )\n\n#check if I got all the sites\nlength(unique(fluxnet_files$SITE_ID))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 246\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(amf_sites_nam)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 723\n```\n\n\n:::\n\n```{.r .cell-code}\nmissing <- setdiff(amf_sites_nam, unique(fluxnet_files$SITE_ID))\nmissing #amerifluxr says it cant find data for these\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"CA-AF1\" \"CA-BCW\" \"CA-BSM\" \"CA-Ca1\" \"CA-Ca2\" \"CA-Ca3\" \"CA-Cbo\" \"CA-CF1\"\n  [9] \"CA-CF2\" \"CA-CF3\" \"CA-Cha\" \"CA-CQ1\" \"CA-DB2\" \"CA-DBB\" \"CA-DL1\" \"CA-DL2\"\n [17] \"CA-DSM\" \"CA-EM1\" \"CA-EM2\" \"CA-EM3\" \"CA-ER1\" \"CA-ER2\" \"CA-IQT\" \"CA-KLP\"\n [25] \"CA-Let\" \"CA-LU1\" \"CA-LU2\" \"CA-LuM\" \"CA-Mer\" \"CA-MR3\" \"CA-MR5\" \"CA-Mtk\"\n [33] \"CA-Na1\" \"CA-NS8\" \"CA-Oas\" \"CA-Obs\" \"CA-Ojp\" \"CA-Qcu\" \"CA-RBM\" \"CA-RPn\"\n [41] \"CA-RPp\" \"CA-RSB\" \"CA-SF3\" \"CA-SJ1\" \"CA-SJ2\" \"CA-SJ3\" \"CA-TP1\" \"CA-TP2\"\n [49] \"CA-TP3\" \"CA-TP4\" \"CA-TPA\" \"CA-TPD\" \"CA-TVC\" \"CA-WP1\" \"CA-WP2\" \"CA-WP3\"\n [57] \"CA-WRF\" \"MX-Aog\" \"MX-Asf\" \"MX-BRN\" \"MX-CHB\" \"MX-CHN\" \"MX-CLS\" \"MX-EMg\"\n [65] \"MX-Iit\" \"MX-ISD\" \"MX-Lpa\" \"MX-Oak\" \"MX-PMm\" \"MX-Ray\" \"MX-Sgt\" \"US-A03\"\n [73] \"US-A10\" \"US-A12\" \"US-A14\" \"US-A20\" \"US-A30\" \"US-A31\" \"US-A33\" \"US-A37\"\n [81] \"US-A38\" \"US-A39\" \"US-A40\" \"US-A41\" \"US-AaG\" \"US-ABa\" \"US-ABb\" \"US-ABc\"\n [89] \"US-ABd\" \"US-ABe\" \"US-AC2\" \"US-AC3\" \"US-AC5\" \"US-AC6\" \"US-Act\" \"US-ADR\"\n [97] \"US-AF1\" \"US-AMS\" \"US-An1\" \"US-An2\" \"US-An3\" \"US-AoL\" \"US-ASL\" \"US-Atq\"\n[105] \"US-Aud\" \"US-AV1\" \"US-AV2\" \"US-AV3\" \"US-AV4\" \"US-AV5\" \"US-BCM\" \"US-Bd4\"\n[113] \"US-Bd5\" \"US-Bd6\" \"US-BdA\" \"US-BdC\" \"US-Beo\" \"US-Bes\" \"US-BFS\" \"US-BgC\"\n[121] \"US-Bkg\" \"US-Blk\" \"US-Blo\" \"US-BMM\" \"US-Bn1\" \"US-Bn2\" \"US-Bn3\" \"US-Bo1\"\n[129] \"US-Bo2\" \"US-Br1\" \"US-Br2\" \"US-Br3\" \"US-Brw\" \"US-Bsg\" \"US-BSM\" \"US-BWa\"\n[137] \"US-BWb\" \"US-BWe\" \"US-BZL\" \"US-CaV\" \"US-CC1\" \"US-CC2\" \"US-Ced\" \"US-ChR\"\n[145] \"US-CLF\" \"US-CMW\" \"US-CN1\" \"US-CN2\" \"US-CPF\" \"US-CPk\" \"US-CRE\" \"US-CRW\"\n[153] \"US-CS7\" \"US-Ctn\" \"US-CU1\" \"US-CU2\" \"US-CwG\" \"US-Cwt\" \"US-CX1\" \"US-CX2\"\n[161] \"US-CZ1\" \"US-CZ2\" \"US-CZ3\" \"US-CZ4\" \"US-DBk\" \"US-DCS\" \"US-Dea\" \"US-Deu\"\n[169] \"US-Dia\" \"US-Dix\" \"US-Dk1\" \"US-Dk2\" \"US-Dk3\" \"US-DPP\" \"US-DUF\" \"US-E32\"\n[177] \"US-EA4\" \"US-EKH\" \"US-EKN\" \"US-EKP\" \"US-EKY\" \"US-EPM\" \"US-FBE\" \"US-Fo1\"\n[185] \"US-Fo2\" \"US-FPe\" \"US-FR1\" \"US-FR2\" \"US-FR3\" \"US-GBT\" \"US-GCE\" \"US-GL1\"\n[193] \"US-GL2\" \"US-GMF\" \"US-Goo\" \"US-GR8\" \"US-GR9\" \"US-GZ1\" \"US-GZ2\" \"US-GZ3\"\n[201] \"US-Ha2\" \"US-HB5\" \"US-HB6\" \"US-HB7\" \"US-HBa\" \"US-HBb\" \"US-HBK\" \"US-Hn1\"\n[209] \"US-Ho1\" \"US-Ho3\" \"US-HPY\" \"US-HRA\" \"US-HRC\" \"US-HRN\" \"US-HRo\" \"US-HRP\"\n[217] \"US-HRS\" \"US-HVa\" \"US-IAA\" \"US-IAB\" \"US-IAC\" \"US-IAM\" \"US-IB1\" \"US-IB2\"\n[225] \"US-IL1\" \"US-INa\" \"US-INb\" \"US-INc\" \"US-INd\" \"US-INe\" \"US-INf\" \"US-INg\"\n[233] \"US-INi\" \"US-INj\" \"US-INn\" \"US-INp\" \"US-Ivo\" \"US-JLN\" \"US-JLR\" \"US-Jo3\"\n[241] \"US-JRn\" \"US-KCM\" \"US-KFB\" \"US-KGF\" \"US-KL1\" \"US-KL2\" \"US-KL3\" \"US-KM1\"\n[249] \"US-KM2\" \"US-KM3\" \"US-KM4\" \"US-KS4\" \"US-KUO\" \"US-KUT\" \"US-Kyv\" \"US-LA1\"\n[257] \"US-LA2\" \"US-LGr\" \"US-LL1\" \"US-LL2\" \"US-LL3\" \"US-LMA\" \"US-LMB\" \"US-LMS\"\n[265] \"US-LMW\" \"US-Los\" \"US-LPH\" \"US-LS1\" \"US-LU1\" \"US-LWW\" \"US-MAC\" \"US-MBP\"\n[273] \"US-MC1\" \"US-MC2\" \"US-MCP\" \"US-Me4\" \"US-Me5\" \"US-Me7\" \"US-MEF\" \"US-Men\"\n[281] \"US-MFs\" \"US-MG1\" \"US-MH1\" \"US-MH2\" \"US-Mi1\" \"US-Mi2\" \"US-Mi3\" \"US-Mj1\"\n[289] \"US-Mj2\" \"US-MN1\" \"US-MN2\" \"US-MN3\" \"US-MRf\" \"US-MRM\" \"US-MSR\" \"US-MtB\"\n[297] \"US-Mur\" \"US-MVF\" \"US-MVW\" \"US-MWA\" \"US-MWF\" \"US-MWS\" \"US-MWU\" \"US-MWW\"\n[305] \"US-MZA\" \"US-NC2\" \"US-NC3\" \"US-NC4\" \"US-NC5\" \"US-Ne2\" \"US-Ne3\" \"US-NGB\"\n[313] \"US-NMj\" \"US-NP1\" \"US-NP2\" \"US-NR1\" \"US-NR2\" \"US-NR3\" \"US-NR4\" \"US-Nrf\"\n[321] \"US-Nrs\" \"US-NSa\" \"US-NSb\" \"US-NSW\" \"US-OF1\" \"US-OF2\" \"US-OK1\" \"US-OK2\"\n[329] \"US-OPE\" \"US-PeA\" \"US-PFa\" \"US-PFf\" \"US-PFo\" \"US-PFs\" \"US-PHM\" \"US-PiU\"\n[337] \"US-PLM\" \"US-PLo\" \"US-Pon\" \"US-PVA\" \"US-Px1\" \"US-Px2\" \"US-Px3\" \"US-Px4\"\n[345] \"US-Px5\" \"US-RC1\" \"US-RC2\" \"US-RC3\" \"US-RC4\" \"US-RC5\" \"US-RFE\" \"US-RFW\"\n[353] \"US-RGG\" \"US-RGR\" \"US-Rpf\" \"US-RTS\" \"US-SB1\" \"US-SB2\" \"US-SB3\" \"US-SCc\"\n[361] \"US-SCd\" \"US-SCf\" \"US-SCg\" \"US-SCs\" \"US-SCw\" \"US-SdH\" \"US-SDU\" \"US-SFP\"\n[369] \"US-SHC\" \"US-Shd\" \"US-SHS\" \"US-Si1\" \"US-Si2\" \"US-SJ1\" \"US-SJ2\" \"US-Skr\"\n[377] \"US-Slt\" \"US-SM1\" \"US-Snd\" \"US-SO2\" \"US-SO3\" \"US-SO4\" \"US-SP2\" \"US-SP3\"\n[385] \"US-SP4\" \"US-Sta\" \"US-StS\" \"US-SuM\" \"US-SuS\" \"US-SuW\" \"US-SVC\" \"US-SVP\"\n[393] \"US-Sx1\" \"US-Sx2\" \"US-Sx3\" \"US-Syv\" \"US-SZ1\" \"US-SZ2\" \"US-SZ3\" \"US-TaS\"\n[401] \"US-TCS\" \"US-TEF\" \"US-TFF\" \"US-TKs\" \"US-TLR\" \"US-Ton\" \"US-TrB\" \"US-TrS\"\n[409] \"US-Tur\" \"US-Tw2\" \"US-Tw5\" \"US-Twt\" \"US-Tx1\" \"US-Tx2\" \"US-Tx3\" \"US-Tx4\"\n[417] \"US-Tx5\" \"US-Tx6\" \"US-Tx7\" \"US-Tx8\" \"US-Tx9\" \"US-Uaf\" \"US-UG1\" \"US-UiA\"\n[425] \"US-UiB\" \"US-UiC\" \"US-UiD\" \"US-UiE\" \"US-UiF\" \"US-UiG\" \"US-ULM\" \"US-UMB\"\n[433] \"US-UMd\" \"US-Upa\" \"US-UR0\" \"US-UR1\" \"US-UR2\" \"US-UR3\" \"US-UR4\" \"US-UR5\"\n[441] \"US-UR6\" \"US-UR7\" \"US-UR8\" \"US-UTD\" \"US-UTE\" \"US-UTG\" \"US-UTJ\" \"US-UTL\"\n[449] \"US-UTM\" \"US-UTN\" \"US-UTP\" \"US-UTV\" \"US-UTW\" \"US-UUC\" \"US-UUP\" \"US-Vcs\"\n[457] \"US-VFP\" \"US-VT1\" \"US-VT2\" \"US-WBW\" \"US-WCr\" \"US-Wdn\" \"US-WEP\" \"US-Wgr\"\n[465] \"US-Wi2\" \"US-Wlr\" \"US-Wpp\" \"US-Wrc\" \"US-WT1\" \"US-WT2\" \"US-WT3\" \"US-Wwt\"\n[473] \"US-xLE\" \"US-xNW\" \"US-xPU\" \"US-xRN\" \"US-xSP\" \"US-xTE\" \"US-xWR\" \"US-YK1\"\n[481] \"US-Ylw\" \"US-YNS\" \"US-ZF1\" \"US-ZF2\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# because the CSVs all have different numbers of columns, you must map read_csv\n# and rowbind the results instead of just passing the list of files to\n# read_csv() which would be faster\n\nfluxnet_annual_list <- fluxnet_files |>\n  filter(period == \"YY\") |>\n  pull(path) |>\n  map(read_csv)\n\nfluxnet_annual <- fluxnet_annual_list |>\n  list_rbind(names_to = \"path\") |>\n  left_join(fluxnet_files |> select(path, SITE_ID), by = join_by(path)) |>\n  select(-path) |>\n  relocate(SITE_ID, .before = 1) |>\n  mutate(\n    across(where(is.numeric), \\(x) na_if(x, -9999)),\n    year = as.integer(TIMESTAMP),\n    .before = TIMESTAMP\n  )\n\nfluxnet_daily_list <- fluxnet_files |>\n  filter(period == \"DD\") |>\n  pull(path) |>\n  map(read_csv)\n\nfluxnet_daily <- fluxnet_daily_list |>\n  list_rbind(names_to = \"path\") |>\n  left_join(fluxnet_files |> select(path, SITE_ID), by = join_by(path)) |>\n  select(-path) |>\n  relocate(SITE_ID, .before = 1) |>\n  mutate(\n    across(where(is.numeric), \\(x) na_if(x, -9999)),\n    date = lubridate::ymd(TIMESTAMP),\n    .before = TIMESTAMP\n  )\n\n#mrege in site \"metadata\"\nsite_metadata <- load_fluxnet_metadata()\nfluxnet_daily <- left_join(fluxnet_daily, site_metadata, by = join_by(SITE_ID))\nfluxnet_annual <- left_join(\n  fluxnet_annual,\n  site_metadata,\n  by = join_by(SITE_ID)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#set up all the possible plot labels as objects for easy reference.  These get formatted by `marquee`\n\nlab_precip_annual <- \"Precipitation (mm y<sup>-1</sup>)\"\nlab_gpp_daily <- \"GPP (g C m<sup>-2</sup> d<sup>-1</sup>)\"\nlab_nee_daily <- \"NEE (g C m<sup>-2</sup> d<sup>-1</sup>)\"\nlab_reco_daily <- \"RECO (g C m<sup>-2</sup> d<sup>-1</sup>)\"\nlab_gpp_annual <- \"GPP (g C m<sup>-2</sup> yr<sup>-1</sup>)\"\nlab_nee_annual <- \"NEE (g C m<sup>-2</sup> yr<sup>-1</sup>)\"\nlab_reco_annual <- \"RECO (g C m<sup>-2</sup> yr<sup>-1</sup>)\"\n```\n:::\n\n\n\n## QA/QC\n\n2 sites have annual precip > 6000mm—that's gotta be an error\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfluxnet_annual <- fluxnet_annual |> filter(P_F < 6000)\n```\n:::\n\n\n\n## Figures\n\nFind all variables described on the [FULLSET Data Product page](https://fluxnet.org/data/fluxnet2015-dataset/fullset-data-product/). Plots are generally of 3 variables: \n\n1. GPP_NT_VUT_REF\n2. RECO_NT_VUT_REF\n3. NEE_VUT_REF\n\n### Entire time series (single site)\n\nLots of ways to smooth time series (i.e., filter)\n\n- Simple running mean from [this book chapter](https://cswr.nrhstat.org/timeseries)\n- Takes mean of value and (n-1) / 2 values on either side of it\n- Bigger window size = more averaging\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwindow_size <- 51\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntotal_ts_gpp <- fluxnet_daily %>%\n  filter(SITE_ID == first(SITE_ID)) |>\n  mutate(\n    running_mean_gpp = stats::filter(\n      GPP_NT_VUT_REF,\n      rep(1 / window_size, window_size)\n    )\n  )\n\nyr_start_dates <- total_ts_gpp %>%\n  filter(grepl(\"-01-01\", date)) %>%\n  pull(date)\n\nggplot(total_ts_gpp, aes(x = date, y = GPP_NT_VUT_REF)) +\n  geom_point(size = 0.5, color = \"darkgrey\") +\n  geom_line(aes(y = running_mean_gpp), color = \"blue\", lwd = 1) +\n  geom_vline(xintercept = yr_start_dates, color = \"grey\", alpha = 0.5) +\n  labs(x = \"Date\", y = lab_gpp_daily)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ntotal_ts_reco <- fluxnet_daily %>%\n  filter(SITE_ID == first(SITE_ID)) |>\n  mutate(\n    running_mean_reco = stats::filter(\n      RECO_NT_VUT_REF,\n      rep(1 / window_size, window_size)\n    )\n  )\n\nggplot(total_ts_reco, aes(x = date, y = RECO_NT_VUT_REF)) +\n  geom_point(size = 0.5, color = \"darkgrey\") +\n  geom_line(aes(y = running_mean_reco), color = \"blue\", lwd = 1) +\n  geom_vline(xintercept = yr_start_dates, color = \"grey\", alpha = 0.5) +\n  labs(x = \"Date\", y = lab_reco_daily)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ntotal_ts_nee <- fluxnet_daily %>%\n  filter(SITE_ID == first(SITE_ID)) |>\n  mutate(\n    running_mean_nee = stats::filter(\n      NEE_VUT_REF,\n      rep(1 / window_size, window_size)\n    )\n  )\n\nggplot(total_ts_nee, aes(x = date, y = NEE_VUT_REF)) +\n  geom_point(size = 0.5, color = \"darkgrey\") +\n  geom_line(aes(y = running_mean_nee), color = \"blue\", lwd = 1) +\n  geom_vline(xintercept = yr_start_dates, color = \"grey\", alpha = 0.5) +\n  labs(x = \"Date\", y = lab_nee_daily)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n\n\n\n### Entire time series (multiple sites)\n\nSame smoother as used for single site. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_ts_ms <- fluxnet_daily %>%\n  group_by(SITE_ID) %>%\n  mutate(\n    running_mean_gpp = stats::filter(\n      GPP_NT_VUT_REF,\n      rep(1 / window_size, window_size)\n    ),\n    running_mean_reco = stats::filter(\n      RECO_NT_VUT_REF,\n      rep(1 / window_size, window_size)\n    ),\n    running_mean_nee = stats::filter(\n      NEE_VUT_REF,\n      rep(1 / window_size, window_size)\n    )\n  )\n\nyr_start_dates_ms <- total_ts_ms %>%\n  filter(grepl(\"-01-01\", date)) %>%\n  pull(date)\n```\n:::\n\n\n\nShow entire time series of GPP for all sites, with points for daily values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(\n  total_ts_ms,\n  aes(\n    x = date,\n    y = GPP_NT_VUT_REF,\n    color = COUNTRY,\n    fill = COUNTRY,\n    group = SITE_ID\n  )\n) +\n  geom_point(size = 0.1, alpha = 0.1, key_glyph = draw_key_rect) +\n  geom_vline(xintercept = yr_start_dates_ms, color = \"grey\", alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"grey\", alpha = 0.5, linetype = \"dashed\") +\n  facet_grid(vars(IGBP)) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Date\", y = lab_gpp_daily) +\n  theme(panel.background = element_rect(color = \"black\"))\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(\n  total_ts_ms,\n  aes(\n    x = date,\n    y = RECO_NT_VUT_REF,\n    color = COUNTRY,\n    fill = COUNTRY,\n    group = SITE_ID\n  )\n) +\n  geom_point(size = 0.1, alpha = 0.1, key_glyph = draw_key_rect) +\n  geom_vline(xintercept = yr_start_dates_ms, color = \"grey\", alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"grey\", alpha = 0.5, linetype = \"dashed\") +\n  facet_grid(vars(IGBP)) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Date\", y = lab_reco_daily) +\n  theme(panel.background = element_rect(color = \"black\"))\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(\n  total_ts_ms,\n  aes(\n    x = date,\n    y = NEE_VUT_REF,\n    color = COUNTRY,\n    fill = COUNTRY,\n    group = SITE_ID\n  )\n) +\n  geom_point(size = 0.1, alpha = 0.1, key_glyph = draw_key_rect) +\n  geom_vline(xintercept = yr_start_dates_ms, color = \"grey\", alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"grey\", alpha = 0.5, linetype = \"dashed\") +\n  facet_grid(vars(IGBP)) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Date\", y = lab_nee_daily) +\n  theme(panel.background = element_rect(color = \"black\"))\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n:::\n\n\n\nShow entire time series of GPP for all sites, with daily values smoothed out as a line. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(\n  total_ts_ms,\n  aes(x = date, y = running_mean_gpp, color = COUNTRY, group = SITE_ID)\n) +\n  geom_line(lwd = 0.5, alpha = 0.7) +\n  geom_vline(xintercept = yr_start_dates_ms, color = \"grey\", alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"grey\", alpha = 0.5, linetype = \"dashed\") +\n  facet_grid(vars(IGBP)) +\n  labs(x = \"Date\", y = lab_gpp_daily) +\n  theme(panel.background = element_rect(color = \"black\"))\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(\n  total_ts_ms,\n  aes(x = date, y = running_mean_reco, color = COUNTRY, group = SITE_ID)\n) +\n  geom_line(lwd = 0.5, alpha = 0.7) +\n  geom_vline(xintercept = yr_start_dates_ms, color = \"grey\", alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"grey\", alpha = 0.5, linetype = \"dashed\") +\n  facet_grid(vars(IGBP)) +\n  labs(x = \"Date\", y = lab_reco_daily) +\n  theme(panel.background = element_rect(color = \"black\"))\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(\n  total_ts_ms,\n  aes(x = date, y = running_mean_nee, color = COUNTRY, group = SITE_ID)\n) +\n  geom_line(lwd = 0.5, alpha = 0.7) +\n  geom_vline(xintercept = yr_start_dates_ms, color = \"grey\", alpha = 0.5) +\n  geom_hline(yintercept = 0, color = \"grey\", alpha = 0.5, linetype = \"dashed\") +\n  facet_grid(vars(IGBP)) +\n  labs(x = \"Date\", y = lab_nee_daily) +\n  theme(panel.background = element_rect(color = \"black\"))\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n:::\n\n\n\n### Average annual time series (single site)\n\nShow average daily values (with standard deviations)\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# get averages by date across years\ngpp_by_date <- fluxnet_daily %>%\n  filter(SITE_ID == first(SITE_ID)) |>\n  mutate(date_minus_year = format(date, '%m-%d')) %>%\n  group_by(date_minus_year) %>%\n  summarize(gpp_mean = mean(GPP_NT_VUT_REF), gpp_sd = sd(GPP_NT_VUT_REF)) %>%\n  mutate(date_fake_year = ymd(paste0(\"2024-\", date_minus_year)))\n\nggplot(gpp_by_date, aes(x = date_fake_year, y = gpp_mean)) +\n  geom_ribbon(\n    aes(ymax = gpp_mean + gpp_sd, ymin = gpp_mean - gpp_sd),\n    fill = \"grey\"\n  ) +\n  geom_point() +\n  labs(\n    x = \"Date\",\n    # y = \"Mean GPP +/- SD\"\n    y = lab_gpp_daily\n  ) +\n  # theme_minimal() +\n  scale_x_date(date_labels = \"%B\")\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nreco_by_date <- fluxnet_daily %>%\n  filter(SITE_ID == first(SITE_ID)) |>\n  mutate(date_minus_year = format(date, '%m-%d')) %>%\n  group_by(date_minus_year) %>%\n  summarize(\n    reco_mean = mean(RECO_NT_VUT_REF),\n    reco_sd = sd(RECO_NT_VUT_REF)\n  ) %>%\n  mutate(date_fake_year = ymd(paste0(\"2024-\", date_minus_year)))\n\nggplot(reco_by_date, aes(x = date_fake_year, y = reco_mean)) +\n  geom_ribbon(\n    aes(ymax = reco_mean + reco_sd, ymin = reco_mean - reco_sd),\n    fill = \"grey\"\n  ) +\n  geom_point() +\n  labs(\n    x = \"Date\",\n    # y = \"Mean RECO +/- SD\"\n    y = lab_reco_daily\n  ) +\n  # theme_minimal() +\n  scale_x_date(date_labels = \"%B\")\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nnee_by_date <- fluxnet_daily %>%\n  filter(SITE_ID == first(SITE_ID)) |>\n  mutate(date_minus_year = format(date, '%m-%d')) %>%\n  group_by(date_minus_year) %>%\n  summarize(nee_mean = mean(NEE_VUT_REF), nee_sd = sd(NEE_VUT_REF)) %>%\n  mutate(date_fake_year = ymd(paste0(\"2024-\", date_minus_year)))\n\nggplot(nee_by_date, aes(x = date_fake_year, y = nee_mean)) +\n  geom_ribbon(\n    aes(ymax = nee_mean + nee_sd, ymin = nee_mean - nee_sd),\n    fill = \"grey\"\n  ) +\n  geom_point() +\n  labs(\n    x = \"Date\",\n    # y = \"Mean NEE +/- SD\"\n    y = lab_nee_daily\n  ) +\n  # theme_minimal() +\n  scale_x_date(date_labels = \"%B\")\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\n\n### Average annual time series (multiple sites)\n\nTextbook figures: \n\n![](textbook_figures/seasonal_gpp_nee.png)\n\nShow average daily values by site (symbols) and vegetation type (colors)\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngpp_by_date_sites <- fluxnet_daily %>%\n  mutate(date_minus_year = format(date, '%m-%d')) %>%\n  group_by(SITE_ID, COUNTRY, IGBP, date_minus_year) %>%\n  summarize(\n    gpp_mean = mean(GPP_NT_VUT_REF),\n    gpp_sd = sd(GPP_NT_VUT_REF),\n    reco_mean = mean(RECO_NT_VUT_REF),\n    reco_sd = sd(RECO_NT_VUT_REF),\n    nee_mean = mean(NEE_VUT_REF),\n    nee_sd = sd(NEE_VUT_REF)\n  ) %>%\n  mutate(date_fake_year = ymd(paste0(\"2024-\", date_minus_year)))\n\ngpp_by_date_sites |>\n  group_by(COUNTRY) |>\n  #some countries have no data\n  filter(!all(is.na(gpp_mean))) |>\n  ggplot(aes(x = date_fake_year, y = gpp_mean)) +\n  facet_wrap(vars(IGBP)) +\n  geom_point(aes(color = COUNTRY)) +\n  scale_x_date(date_labels = \"%B\") +\n  labs(x = \"Date\", y = lab_gpp_daily) +\n  theme_minimal() +\n  theme(axis.title = element_markdown())\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ngpp_by_date_sites |>\n  group_by(COUNTRY) |>\n  filter(!all(is.na(reco_mean))) |>\n  ggplot(aes(x = date_fake_year, y = reco_mean)) +\n  facet_wrap(vars(IGBP)) +\n  geom_point(aes(color = COUNTRY)) +\n  labs(x = \"Date\", y = lab_reco_daily) +\n  scale_x_date(date_labels = \"%B\") +\n  theme_minimal() +\n  theme(axis.title = element_markdown())\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ngpp_by_date_sites |>\n  group_by(COUNTRY) |>\n  filter(!all(is.na(nee_mean))) |>\n  ggplot(aes(x = date_fake_year, y = nee_mean)) +\n  facet_wrap(vars(IGBP)) +\n  geom_point(aes(color = COUNTRY)) +\n  scale_x_date(date_labels = \"%B\") +\n  labs(x = \"Date\", y = lab_nee_daily) +\n  theme_minimal() +\n  theme(axis.title = element_markdown())\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-11-3.png){width=672}\n:::\n:::\n\n\n\n### Comparison to meteorological variables (multiple sites)\n\nTextbook figure (for NEE): \n\n![](textbook_figures/meteo_comp.png)\n\nMeteorological variables (bold indicates variable in figures): \n\n1. P: Precipitation - not in annual datasets\n2. P_ERA: Precipitation, downscaled from ERA, linearly regressed using measured only site data\n3. **P_F**: Precipitation consolidated from P and P_ERA\n4. TA_F_MDS: Air temperature, gapfilled using MDS method\n5. TA_ERA: Air temperature, downscaled from ERA, linearly regressed using measured only site data\n6. **TA_F**: Air temperature, consolidated from TA_F_MDS and TA_ERA\n\nShow annual precipitation, summed from daily data, against three main variables annually. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nfluxnet_annual |>\n  filter(!is.na(GPP_NT_VUT_REF)) |>\n  ggplot(aes(x = P_F, y = GPP_NT_VUT_REF)) +\n  geom_point(aes(color = IGBP, group = SITE_ID)) +\n  geom_smooth(se = FALSE, color = \"black\") +\n  labs(x = lab_precip_annual, y = lab_gpp_annual)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nfluxnet_annual |>\n  filter(!is.na(RECO_NT_VUT_REF)) |>\n  ggplot(aes(x = P_F, y = RECO_NT_VUT_REF)) +\n  geom_point(aes(color = IGBP, group = SITE_ID)) +\n  geom_smooth(se = FALSE, color = \"black\") +\n  labs(x = lab_precip_annual, y = lab_reco_annual)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nfluxnet_annual |>\n  filter(!is.na(NEE_VUT_REF)) |>\n  ggplot(aes(x = P_F, y = NEE_VUT_REF)) +\n  geom_point(aes(color = IGBP, group = SITE_ID)) +\n  geom_smooth(se = FALSE, color = \"black\") +\n  labs(x = lab_precip_annual, y = lab_nee_annual)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n:::\n\n\n\nShow annual temperature, averaged from daily data, against three main variables annually. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nfluxnet_annual |>\n  ggplot(aes(x = TA_F, y = GPP_NT_VUT_REF)) +\n  geom_point(aes(color = IGBP, group = SITE_ID)) +\n  geom_smooth(se = FALSE, color = \"black\") +\n  labs(x = \"Temperature (ºC)\", y = lab_gpp_annual)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nfluxnet_annual |>\n  ggplot(aes(x = TA_F, y = RECO_NT_VUT_REF)) +\n  geom_point(aes(color = IGBP, group = SITE_ID)) +\n  geom_smooth(se = FALSE, color = \"black\") +\n  labs(x = \"Temperature (ºC)\", y = lab_reco_annual)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nfluxnet_annual |>\n  ggplot(aes(x = TA_F, y = NEE_VUT_REF)) +\n  geom_point(aes(color = IGBP, group = SITE_ID)) +\n  geom_smooth(se = FALSE, color = \"black\") +\n  labs(x = \"Temperature (ºC)\", y = lab_nee_annual)\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-tip}\n## Questions\n\n1. We want to do this for evapotranspiration; which variable is that in the dataset? \n2. Do precipitation variable P and temp variable TA_F_MDS come from measured site data? \n3. We could get some measure of variability for x- (temp and precip) and y- (GPP, RECO, NEE) axes by using the daily or monthly values instead; would that be of interest? \n:::\n\n### Interannual comparison to meteorological variables (multiple sites)\n\nTextbook figure (for NPP): \n\n![](textbook_figures/interannual_meteo_comp.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fluxnet_annual, aes(x = P_F, y = GPP_NT_VUT_REF)) +\n  geom_smooth(se = FALSE, color = \"black\", linewidth = 0.5) +\n  # geom_smooth(se = FALSE, aes(color = site), method = \"lm\") +\n  geom_textsmooth(\n    aes(color = IGBP, label = IGBP),\n    se = FALSE,\n    method = \"lm\",\n    offset = unit(5, \"pt\"),\n    gap = FALSE,\n    # textcolor = \"black\",\n    size = 3\n  ) +\n  labs(x = lab_precip_annual, y = lab_gpp_annual) +\n  guides(color = \"none\")\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n### Bowen ratios\n\nTextbook figure: \n\n![](textbook_figures/bowen_ratios.png)\n\nHeat flux variables (bold indicates variable in figures): \n\n- **H_F_MDS**: Sensible heat flux, gapfilled using MDS method (W m-2)\n- H_CORR (H_CORR_25, H_CORR_75): Sensible heat flux, corrected H_F_MDS by energy balance closure correction factor (25th and 75th percentile) \n- **LE_F_MDS**: Latent heat flux, gapfilled using MDS method\n- LE_CORR (LE_CORR_25, LE_CORR_75): Latent heat flux, corrected LE_F_MDS by energy balance closure correction factor (25th and 75th percentile) \n\n\nVisual check of heat flux variable ranges. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggplot(fluxnet_daily, aes(x = LE_F_MDS)) +\n#   geom_histogram() +\n#   facet_wrap(vars(SITE_ID)) +\n#   theme_bw()\n\n# ggplot(fluxnet_daily, aes(x = H_F_MDS)) +\n#   geom_histogram() +\n#   facet_wrap(vars(SITE_ID)) +\n#   theme_bw()\n```\n:::\n\n\n\nShow average daily summer-only sensible vs latent heat flux (i.e., Bowen ratio) for multiple sites with different vegetation types. Bowen ratios of 3, 2, 1, 0.5, and 0.25 shown by dotted lines. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmultiple_sites_flux <- fluxnet_daily %>%\n  filter(month(date) %in% c(6:8)) %>% #filter to include summer only\n  group_by(SITE_ID, IGBP) %>%\n  summarize(\n    latent_heat_flux = mean(LE_F_MDS),\n    sensible_heat_flux = mean(H_F_MDS)\n  )\n\nupper_axis_limit <- pmax(\n  max(multiple_sites_flux$sensible_heat_flux),\n  max(multiple_sites_flux$latent_heat_flux)\n) +\n  10\n\nggplot(\n  multiple_sites_flux,\n  aes(x = latent_heat_flux, y = sensible_heat_flux, color = IGBP)\n) +\n  geom_point(size = 3) +\n  # geom_mark_hull(expand = unit(1, \"mm\")) + #looks ridiculous\n  geom_mark_ellipse(\n    aes(\n      label = IGBP,\n      fill = IGBP,\n      filter = IGBP %in% c(\"OSH\", \"CRO\", \"DBF\") #highlight just a few?\n    ),\n    label.fill = \"inherit\"\n  ) +\n  geom_abline(\n    slope = c(0.25, 0.5, 1, 2, 3),\n    linetype = \"dotted\",\n    color = \"darkgrey\"\n  ) +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, upper_axis_limit)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, upper_axis_limit)) +\n  # guides(x.sec = \"axis\", y.sec = \"axis\") +\n  guides(fill = \"none\") +\n  labs(\n    x = \"Latent Heat Flux (W m<sup>-2</sup>)\",\n    y = \"Sensible Heat Flux (W m<sup>-2</sup>)\"\n  ) +\n  theme(\n    panel.border = element_rect(fill = NA),\n    axis.title = element_markdown(),\n    # axis.ticks.x.top = element_blank(),\n    # axis.text.x.top = element_blank(),\n    # axis.ticks.y.right = element_blank(),\n    # axis.text.y.right = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-tip}\n## Questions\n\n1. Should watts be converted to megajoules for the heat flux variables? *No, people will be more likely to expect Wm-2*\n2. Are heat flux values expected to be negative, especially for sensible heat flux? \n:::\n\n### Biome plot\n\nTextbook figure: \n\n![](textbook_figures/biomes.png)\n\nThe R package [`plotbiomes`](https://github.com/valentinitnelav/plotbiomes) can be used to recreate the base plot here, which is referred to as a [Whittaker plot](https://en.wikipedia.org/wiki/Biome#Whittaker_(1962,_1970,_1975)_biome-types). It includes a dataset of temperature, precipitation, and associated biome. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"Whittaker_biomes\")\nhead(Whittaker_biomes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       temp_c precp_cm biome_id  biome\n1   -10.21600 1.607134        6 Tundra\n1.1 -10.62857 1.696938        6 Tundra\n1.2 -11.14116 1.846052        6 Tundra\n1.3 -11.61776 2.028094        6 Tundra\n1.4 -12.05961 2.242129        6 Tundra\n1.5 -12.46799 2.486286        6 Tundra\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(Whittaker_biomes$biome)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Tundra\"                           \"Boreal forest\"                   \n[3] \"Temperate grassland/desert\"       \"Woodland/shrubland\"              \n[5] \"Temperate seasonal forest\"        \"Temperate rain forest\"           \n[7] \"Tropical rain forest\"             \"Tropical seasonal forest/savanna\"\n[9] \"Subtropical desert\"              \n```\n\n\n:::\n:::\n\n\n\nGet mean values of annual precipitation (P_F) and temperature (TA_F) for each site, and convert precipitation to match Whittaker dataset units (mm/yr to cm/yr). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhittaker_format <- fluxnet_annual %>%\n  group_by(SITE_ID) %>%\n  summarize(mean_precip = mean(P_F), mean_temp = mean(TA_F)) %>%\n  mutate(mean_precip_cm = conv_unit(mean_precip, \"mm\", \"cm\")) %>%\n  left_join(site_metadata, by = join_by(SITE_ID))\n```\n:::\n\n\n\nShow mean annual precipitation and temperature of each site over Whittaker biome. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() +\n  geom_polygon(\n    data = Whittaker_biomes,\n    aes(x = temp_c, y = precp_cm, fill = biome),\n    # fill = \"white\"\n    alpha = 0.4\n  ) +\n  # scale_fill_brewer(palette = \"BrBG\") +\n  scale_fill_manual(\n    name = \"Whittaker biomes\",\n    breaks = names(Ricklefs_colors),\n    labels = names(Ricklefs_colors),\n    values = Ricklefs_colors\n  ) +\n  # new_scale_color() +\n  geom_point(\n    data = whittaker_format,\n    aes(x = mean_temp, y = mean_precip_cm, color = IGBP)\n  ) +\n  # scale_color_brewer(palette = \"Set1\") +\n  labs(x = \"Temperature (C)\", y = \"Precipitation (cm y-1)\")\n```\n\n::: {.cell-output-display}\n![](plot_fluxnet_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-tip}\n## Questions\n\n1. How suspicious are sites that don't exist in a biome?\n:::\n\n### Daily energy flux (single site)\n\nTextbook figure: \n\n![](textbook_figures/daily_energy_flux.png)\n\nThe energy flux variables are listed below. The ones that have multiple possible options are discussed below in the questions section. \n\n- NETRAD: Net radiation\n- SW_IN_F: Shortwave radiation, incoming consolidated from SW_IN_F_MDS and SW_IN_ERA (negative values set to zero)\n- SW_OUT: Shortwave radiation, outgoing\n- LW_IN_F: Longwave radiation, incoming, consolidated from LW_IN_F_MDS and LW_IN_ERA\n- LW_OUT: Longwave radiation, outgoing\n\nParsing dates and times: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#not working currently\nrad_dt <- single_site_hourly %>%\n  mutate(\n    date = date(datetime_start),\n    time = format(as.POSIXct(datetime_start), format = '%H:%M')\n  )\n```\n:::\n\n\n\nShow average half-hourly shortwave, longwave, and total radiation for a single site. Data collection starts `min(rad_dt$date)` and ends `max(rad_dt$date)`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nrad_means <- rad_dt %>%\n  group_by(time) %>%\n  summarise(\n    rn_mean = mean(NETRAD),\n    sw_in_mean = mean(SW_IN_F),\n    sw_out_mean = mean(SW_OUT),\n    lw_in_mean = mean(LW_IN_F),\n    lw_out_mean = mean(LW_OUT)\n  ) %>%\n  pivot_longer(\n    !time,\n    names_to = \"energy_flux_var\",\n    values_to = \"energy_flux_value\"\n  ) %>%\n  mutate(\n    energy_flux_var = factor(\n      energy_flux_var,\n      levels = c(\n        \"rn_mean\",\n        \"sw_in_mean\",\n        \"sw_out_mean\",\n        \"lw_in_mean\",\n        \"lw_out_mean\"\n      )\n    )\n  )\n\nggplot(rad_means, aes(x = time, y = energy_flux_value)) +\n  geom_line(aes(group = energy_flux_var, linetype = energy_flux_var)) +\n  geom_hline(yintercept = 0) +\n  #geom_point() +\n  labs(x = \"Time (hr)\", y = \"Energy flux (W m-2)\") +\n  theme_minimal() +\n  scale_x_discrete(\n    breaks = c(\"00:00\", \"04:00\", \"08:00\", \"12:00\", \"16:00\", \"20:00\")\n  ) +\n  scale_linetype_manual(\n    values = c(\"solid\", \"dotted\", \"dotted\", \"dashed\", \"dashed\")\n  )\n```\n:::\n\n\n\n::: {.callout-tip}\n## Questions\n\n1. Why does this not really line up with the textbook image? *Because this is real data. We will investigate more later*\n2. There are a few options for shortwave in besides SW_IN_F: SW_IN_POT, SW_IN_F_MDS, SW_IN_ERA. Which of these is the one we want? *Yes*\n3. Longwave in also has those options, plus JSB ones. *Also yes*\n4. Add standard deviation to these means? \n:::\n\nTextbook figure for APAR vs GPP for two sites: \n\n![](textbook_figures/apar.png)\n\nShow photosynthetically active radiation to GPP. \n\n::: {.callout-tip}\n# Question\n\n**Which dataset is APAR in?** It's listed in the [data variables page](https://fluxnet.org/data/aboutdata/data-variables/), but not on the [fullset page](https://fluxnet.org/data/fluxnet2015-dataset/fullset-data-product/) or in the single site hourly, daily, or annual datasets. Other **MET_RAD** variables like SW/LW radiation and photon flux density are in those datsets. Also not in BADM. \n:::",
    "supporting": [
      "plot_fluxnet_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}