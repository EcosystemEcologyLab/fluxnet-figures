---
title: "Global Fluxnet Figures"
authors:
    - name: Eric R. Scott
      orcid: 0000-0002-7430-7879
format: 
  html:
    toc: true
    code-fold: true
execute: 
  freeze: auto
---


```{r}
#| label: setup
#| message: false
#| warning: false
library(dplyr)
library(tsibble)
library(purrr)
library(ggplot2)
library(ggtext)
library(patchwork)
library(sf)
library(colorspace)
library(rnaturalearth)
source("R/fcn_utility_FLUXNET.R")
set.seed(123)
```

## Load Data

```{r}
#| label: data
#| cache: true
#| collapse: true

metadata <- load_fluxnet_metadata()
amf_files <- discover_AMF_files(data_dir = here::here("data/AMF"))
icos_files <- discover_ICOS_files(data_dir = here::here("data/ICOS"))
manifest <- bind_rows(amf_files, icos_files)

# deduplicate manifest?
manifest <- manifest %>%
  distinct(
    site,
    data_product,
    dataset,
    time_integral,
    start_year,
    end_year,
    .keep_all = TRUE
  )
annual <- manifest %>%
  filter(time_integral == "YY") %>%
  load_fluxnet_data() %>%
  mutate(across(where(is.numeric), \(x) na_if(x, -9999))) %>%
  mutate(year = as.integer(TIMESTAMP), .before = TIMESTAMP) %>%
  left_join(metadata %>% select(-SITEID, -SITE_ID), by = join_by(site))

monthly <- manifest %>%
  filter(time_integral == "MM") %>%
  load_fluxnet_data() %>%
  mutate(across(where(is.numeric), \(x) na_if(x, -9999))) %>%
  mutate(
    yearmonth = tsibble::yearmonth(as.character(TIMESTAMP), format = "%Y%m"),
    .before = TIMESTAMP
  ) %>%
  left_join(metadata %>% select(-SITEID, -SITE_ID), by = join_by(site))
```

::: {.callout-important}

I'm not sure if this is correct, but these are the [variables](https://fluxnet.org/data/fluxnet2015-dataset/fullset-data-product/) I'm using for fluxes:

- GPP: `GPP_NT_VUT_MEAN` ± `GPP_NT_VUT_SE` (units: gC m-2 y-1)
- NEE: `NEE_VUT_MEAN` ± `NEE_VUT_SE` (units: gC m-2 y-1	)
- RECO: `RECO_NT_VUT_MEAN` ± `RECO_NT_VUT_SE` (units: gC m-2 y-1)
- ET: (will need to get from external source and join in)

```{r}
#| code-fold: false
vars_of_interest <- c(
  "GPP_NT_VUT_MEAN",
  "NEE_VUT_MEAN",
  "RECO_NT_VUT_MEAN"
)
```

:::

## Figures

These are the figures outlined [here](https://docs.google.com/document/d/1pboBG_xrkZ-VXZo7OWbEBurycVfVDwIZ3NsmSD-ScXE/edit?tab=t.0)

1. FLUXNET site map by biome or record length (@fig-site-map).
2. Network-mean annual fluxes (NEE, GPP, RECO, ET) with trends (@fig-annual-anomalies). 
3. Composite anomalies during extreme events (e.g., ENSO, drought). 
4. Global flux maps (baseline and anomaly layers) (@fig-flux-map).
5. Regional highlight panels / bar charts by continent. 
6. Timeseries and normalized trends 
7. Phenology trends for major biomes (onset/peak/offset). 
8. “Year in Flux” thematic figure (rotating). 


```{r}
#| label: site-map
#| output: false

world <- ne_countries() %>%
  st_set_crs(4326) %>%
  filter(continent != "Antarctica")
site_yrs <- annual %>%
  group_by(site) %>%
  summarize(n_yrs = length(unique(year))) %>%
  left_join(metadata, by = join_by(site)) %>%
  st_as_sf(coords = c("LOCATION_LONG", "LOCATION_LAT")) %>%
  st_set_crs(4326)

# set up bboxes for N. America and Europe
# These could be defined manually by lat + lon, by countries, or by sites.  This version defines it by sites
bbox_na <-
  site_yrs %>%
  # filter(DATA_SOURCE == "AmeriFlux") %>%
  filter(COUNTRY %in% c("USA", "Canada", "Mexico", "Panama", "Costa Rica")) %>%
  st_bbox()

bbox_eu <-
  site_yrs %>%
  filter(DATA_SOURCE == "ICOS") %>%
  filter(
    COUNTRY %in%
      c(
        "Belgium",
        "Switzerland",
        "Czechia",
        "Germany",
        "Denmark",
        "Spain",
        "Finland",
        "France",
        "Italy",
        "Netherlands",
        "Norway",
        "Portugul",
        "Sweden",
        "UK"
      )
  ) %>%
  st_bbox()

p <- ggplot() +
  geom_sf(data = world, fill = "white") +
  geom_sf(data = site_yrs, aes(color = n_yrs), size = 0.5) +
  scale_color_continuous_sequential(
    palette = "Viridis",
    rev = FALSE,
    end = 0.9
  ) +
  theme_void() +
  theme(
    panel.background = element_rect(fill = "lightblue", color = "black")
  )

p1 <- p + coord_sf(default_crs = 4326, lims_method = "geometry_bbox")
# p1
p2 <- p +
  coord_sf(
    xlim = c(bbox_na["xmin"], bbox_na["xmax"]),
    ylim = c(bbox_na["ymin"], bbox_na["ymax"])
  )
# p2
p3 <- p +
  coord_sf(
    xlim = c(bbox_eu["xmin"], bbox_eu["xmax"]),
    ylim = c(bbox_eu["ymin"], bbox_eu["ymax"])
  )
# p3

p_composite <- p1 /
  (p3 | p2) +
  plot_layout(
    widths = c(1, 0.4, 0.6),
    heights = c(0.387, 0.5, 0.5),
    guides = "collect"
  ) &
  labs(color = "# yrs")

n_yrs_file <- ggsave("saved_plots/n_yrs_site_map.png", p_composite)
knitr::plot_crop(n_yrs_file)
```

```{r}
#| label: fig-site-map
#| fig-cap: Map of sites by number of years of data
knitr::include_graphics(n_yrs_file)
```

```{r}
#| label: annual-anomalies
annual_anomalies <- annual %>%
  mutate(
    .by = c(site),
    across(all_of(vars_of_interest), \(x) x - mean(x, na.rm = TRUE))
  ) %>%
  summarize(
    .by = c(year),
    across(
      all_of(vars_of_interest),
      .fns = list(mean = \(x) mean(x, na.rm = TRUE), sd = \(x) {
        sd(x, na.rm = TRUE)
      })
    )
  ) %>%
  # keep only rows where at least one of the means is not NA or Inf
  filter(if_any(all_of(paste0(vars_of_interest, "_mean")), is.finite))

```

```{r}
#| label: fig-annual-anomalies
#| fig-cap: "Mean ± SD of normalized (i.e. centered by subtracting the mean from the annual mean at each site) global fluxes; NEE (a), GPP (b), and RECO (c)"
nee <- ggplot(annual_anomalies, aes(x = year)) +
  geom_ribbon(
    aes(
      ymin = NEE_VUT_MEAN_mean - NEE_VUT_MEAN_sd,
      ymax = NEE_VUT_MEAN_mean + NEE_VUT_MEAN_sd
    ),
    alpha = 0.4
  ) +
  geom_line(aes(y = NEE_VUT_MEAN_mean)) +
  labs(y = "NEE (gC m<sup>-2</sup> y<sup>-1</sup>)") +
  theme(axis.title.y = element_markdown(), axis.title.x = element_blank())

gpp <- ggplot(annual_anomalies, aes(x = year)) +
  geom_ribbon(
    aes(
      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,
      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd
    ),
    alpha = 0.4
  ) +
  geom_line(aes(y = GPP_NT_VUT_MEAN_mean)) +
  labs(y = "GPP (gC m<sup>-2</sup> y<sup>-1</sup>)") +
  theme(axis.title.y = element_markdown(), axis.title.x = element_blank())

reco <- ggplot(annual_anomalies, aes(x = year)) +
  geom_ribbon(
    aes(
      ymin = RECO_NT_VUT_MEAN_mean - RECO_NT_VUT_MEAN_sd,
      ymax = RECO_NT_VUT_MEAN_mean + RECO_NT_VUT_MEAN_sd
    ),
    alpha = 0.4
  ) +
  geom_line(aes(y = RECO_NT_VUT_MEAN_mean)) +
  labs(y = "RECO (gC m<sup>-2</sup> y<sup>-1</sup>)") +
  theme(axis.title.y = element_markdown(), axis.title.x = element_blank())

nee +
  gpp +
  reco +
  plot_layout(ncol = 2, axes = "collect") +
  plot_annotation(tag_levels = "a")
```


```{r}
#| label: fig-extreme
#| fig-cap: "Composite anomalies during extreme events (e.g., ENSO, drought)"

ggplot()
```


```{r}
#| label: flux-map

# all years prior to current year

annual_hist <-
  annual %>%
  select(site, year, all_of(vars_of_interest)) %>%
  # filter(site == "CA-DSM") %>%
  filter(year < max(year)) %>%
  summarize(
    .by = site,
    across(
      all_of(vars_of_interest),
      \(x) mean(x, na.rm = TRUE)
    )
  )
# current year - mean of all prior years

annual_current <-
  annual %>%
  select(site, year, all_of(vars_of_interest)) %>%
  # filter(site == "CA-DSM") %>%
  filter(year == max(year)) %>%
  summarize(
    .by = site,
    across(
      all_of(vars_of_interest),
      \(x) mean(x, na.rm = TRUE)
    )
  )

plot_df <- bind_rows(
  annual_hist %>% mutate(period = "hist"),
  annual_current %>% mutate(period = "curr"),
) %>%
  pivot_longer(c(-site, -period)) %>%
  pivot_wider(names_from = "period", values_from = "value") %>%
  mutate(diff = curr - hist) %>%
  pivot_wider(names_from = name, values_from = c(hist, curr, diff)) %>%
  #join in lat lon
  left_join(metadata %>% select(site, LOCATION_LAT, LOCATION_LONG)) %>%
  st_as_sf(coords = c("LOCATION_LONG", "LOCATION_LAT")) %>%
  st_set_crs(4326)

# make plots
p_list <- map(vars_of_interest, \(var) {
  lab <- str_extract(var, "GPP|NEE|RECO")
  var_hist <- paste0("hist_", var)
  var_diff <- paste0("diff_", var)
  #left panel: historic
  p1 <- plot_df %>%
    filter(if_all(all_of(var_hist), is.finite)) %>%
    ggplot() +
    geom_sf(data = world, fill = "white") +
    geom_sf(aes(color = .data[[var_hist]]), size = 0.8, na.rm = TRUE) +
    scale_color_continuous_sequential(palette = "Viridis") +
    # scale_color_continuous_diverging() +
    # scale_color_binned_diverging() +
    labs(
      color = glue::glue("{lab} gC m<sup>-2</sup> y<sup>-1</sup>")
    ) +
    coord_sf(expand = FALSE) +
    theme_void() +
    theme(
      legend.title = element_markdown(),
      legend.position = "bottom",
      legend.key.width = unit(1, "null"), #stretch to fill width of plot
      plot.margin = unit(
        c(4, 4, 4, 4),
        c("points", "points", "points", "points")
      ),
      panel.background = element_rect(fill = "lightblue", color = "black")
    )
  #right panel: this year - historic
  p2 <- plot_df %>%
    filter(if_all(all_of(var_diff), is.finite)) %>%
    ggplot() +
    geom_sf(data = world, fill = "white") +
    geom_sf(aes(color = .data[[var_diff]]), size = 0.8, na.rm = TRUE) +
    scale_color_continuous_diverging() +
    # scale_color_binned_diverging() +
    labs(
      color = glue::glue("{lab} gC m<sup>-2</sup> y<sup>-1</sup>")
    ) +
    coord_sf(expand = FALSE) +
    theme_void() +
    theme(
      legend.title = element_markdown(),
      legend.position = "bottom",
      legend.key.width = unit(1, "null"), #stretch to fill width of plot
      plot.margin = unit(
        c(4, 4, 4, 4),
        c("points", "points", "points", "points")
      ),
      panel.background = element_rect(fill = "lightblue", color = "black")
    )
  p1 / p2
})

```

```{r}
#| label: fig-flux-map
#| fig-cap: "Map of fluxes averaged over all years prior to 2024 (a, c, e) and the difference between the current year (2024) and those prior years (b, d, f)"
#| layout-nrow: 3
#| column: body-outset
#| fig-height: 8
#| fig-width: 15

wrap_plots(p_list, ncol = 3) + plot_annotation(tag_levels = "a")
```



## Timeseries of anomalies

E.g. one site:
```{r}
monthly %>%
  filter(site == "US-Ha1") %>%
  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN)) +
  geom_line()
```

Calculate anomalies as the difference at each yearmonth from the average for that month (at each site?)

```{r}
anomalies <-
  monthly %>%
  select(yearmonth, site, all_of(vars_of_interest), IGBP) %>%
  mutate(month = month(yearmonth), .before = yearmonth) %>%
  mutate(
    across(all_of(vars_of_interest), \(x) x - mean(x, na.rm = TRUE)),
    .by = c(site, month)
  )
```

E.g. one site:

```{r}
anomalies %>%
  filter(site == "US-Ha1", !is.na(GPP_NT_VUT_MEAN)) %>%
  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN)) +
  geom_line(aes(color = GPP_NT_VUT_MEAN > 0, group = 1)) #TODO: find better way to color anomalies
```

By IGBP averaged across sites

```{r}
anomalies %>%
  group_by(yearmonth, IGBP) %>%
  summarize(across(
    all_of(vars_of_interest),
    .fns = list(mean = \(x) mean(x, na.rm = TRUE), sd = \(x) {
      sd(x, na.rm = TRUE)
    })
  )) %>%
  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN_mean)) +
  facet_wrap(vars(IGBP), scales = "free") +
  geom_line() +
  geom_ribbon(
    aes(
      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,
      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd
    ),
    color = NA,
    alpha = 0.4
  )
```

## Zonal timeseries

With an arbitrary polygon (e.g. a country, a biome, etc.), extract and average (?) timeseries of all sites in the polygon


```{r}
# pick a polygon
usa <- ne_countries(country = "United States of America") %>% st_set_crs(4326)

# figure out which sites are in the polygon
metadata_sf <- metadata %>%
  st_as_sf(coords = c("LOCATION_LONG", "LOCATION_LAT")) %>%
  st_set_crs(st_crs(usa)) #arbitrary lat/lon CRS

# subset of sites that are in the polygon
metadata_sf_sub <- metadata_sf[st_intersects(usa, metadata_sf)[[1]], ]
sites_sub <- metadata_sf_sub$site

ggplot() +
  geom_sf(data = world, fill = "white") +
  # geom_sf(data = plot_df_sf) +
  geom_sf(data = usa, fill = "green", alpha = 0.5) +
  # geom_sf(data = metadata_sf_sub, color = "darkgreen") + # these sites don't all necessarily have data
  # coord_sf(xlim = c(sites_bbox["xmin"], sites_bbox["xmax"])) +
  theme_bw()
```


```{r}
monthly_sub <- monthly %>%
  filter(site %in% sites_sub)

# get monthly means I guess?
mean_monthly_sub <- monthly_sub %>%
  group_by(yearmonth) %>%
  summarize(across(
    all_of(vars_of_interest),
    .fns = list(
      mean = \(x) mean(x, na.rm = TRUE),
      sd = \(x) sd(x, na.rm = TRUE)
    )
  )) %>%
  filter(if_all(starts_with(vars_of_interest), is.finite))

ggplot(mean_monthly_sub, aes(x = yearmonth, y = GPP_NT_VUT_MEAN_mean)) +
  geom_line() +
  geom_ribbon(
    aes(
      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,
      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd
    ),
    alpha = 0.3
  ) +
  labs(title = "Mean (±SD) in subset")

# Or maybe we just want all the sites plotted as anomalies
monthly_sub %>%
  select(yearmonth, site, all_of(vars_of_interest)) %>%
  mutate(month = month(yearmonth), .before = yearmonth) %>%
  mutate(
    across(all_of(vars_of_interest), \(x) x - mean(x, na.rm = TRUE)),
    .by = c(site, month)
  ) %>%
  # filter(if_all(starts_with(vars_of_interest), is.finite)) %>%
  filter(is.finite(GPP_NT_VUT_MEAN)) %>%
  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN, color = site)) +
  geom_line(alpha = 0.3) +
  theme(legend.position = "none") +
  labs(title = "Anomalies in subset")
```

That is not very nice looking.

To plot anomalies for a geographical subset, would you first normalize then take the average or average and then normalize?  Probably the former?


```{r}
monthly_sub %>%
  select(yearmonth, site, all_of(vars_of_interest)) %>%
  mutate(month = month(yearmonth), .before = yearmonth) %>%
  mutate(
    across(all_of(vars_of_interest), \(x) x - mean(x, na.rm = TRUE)),
    .by = c(site, month)
  ) %>%
  group_by(yearmonth) %>%
  summarize(
    across(
      all_of(vars_of_interest),
      .fns = list(mean = \(x) mean(x, na.rm = TRUE), sd = \(x) {
        sd(x, na.rm = TRUE)
      })
    )
  ) %>%
  filter(if_all(starts_with(vars_of_interest), is.finite)) %>%
  ggplot(aes(x = yearmonth, y = GPP_NT_VUT_MEAN_mean)) +
  geom_line() +
  geom_ribbon(
    aes(
      ymin = GPP_NT_VUT_MEAN_mean - GPP_NT_VUT_MEAN_sd,
      ymax = GPP_NT_VUT_MEAN_mean + GPP_NT_VUT_MEAN_sd
    ),
    alpha = 0.3
  ) +
  labs(title = "Mean (±SD) anomaly in subset")
```